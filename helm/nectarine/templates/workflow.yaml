---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: nectarine-
spec:
  entrypoint: main
  templates:
    - name: main
      steps:
        - - name: transform:users
            templateRef: &transform-template
              name: nectarine-template
              template: transform
            arguments:
              parameters:
              - name: target
                value: users
          - name: transform:items
            templateRef:
              <<: *transform-template
            arguments:
              parameters:
              - name: target
                value: items
        - - name: transform:interactions
            templateRef:
              <<: *transform-template
            arguments:
              parameters:
              - name: target
                value: interactions
        - - name: train
            templateRef:
              name: nectarine-template
              template: train
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: nectarine-template
spec:
  templates:
    - name: transform
      container:
        image: '{{ .Values.image.uri }}:{{ .Values.image.tag }}'
        command:
          - python -m
          - nectarine.transform
        args:
          - --target {{ `{{ inputs.parameters.target }}` }}
          - --data {{ `{{ inputs.parameters.data }}` }}
          - --schema /nectarine/config/schema.yaml
          - --config /nectarine/config/config.yaml
        volumeMounts:
          - &config-volume-mount
            name: config-vol
            mountPath: /nectarine/config
      volumes:
        - &config-volume
          name: config-vol
          configMap:
            name: nectarine-config
    - name: train
      container:
        image: '{{ .Values.image.uri }}:{{ .Values.image.tag }}'
        command:
          - python -m
          - nectarine.train
        args:
          - --config /nectarine/config/config.yaml
        volumeMounts:
        - *config-volume-mount
      volumes:
        - *config-volume
